//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.3053.
// 
namespace Nucleo.GoodGuide.Datasets.Datasets {
    using System;
    using System.Data;
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DestinationDataset")]
    public partial class DestinationDataset : global::System.Data.DataSet {
        
        private DestinationDataTable tableDestination;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DestinationDataset() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DestinationDataTable Destination {
            get {
                return this.tableDestination;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DestinationDataset cln = ((DestinationDataset)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Destination"] != null)) {
                    base.Tables.Add(new DestinationDataTable(ds.Tables["Destination"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDestination = ((DestinationDataTable)(base.Tables["Destination"]));
            if ((initTable == true)) {
                if ((this.tableDestination != null)) {
                    this.tableDestination.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DestinationDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DestinationDataset.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDestination = new DestinationDataTable();
            base.Tables.Add(this.tableDestination);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDestination() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DestinationDataset ds = new DestinationDataset();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DestinationRowChangeEventHandler(object sender, DestinationRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DestinationDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnShortDescription;
            
            private global::System.Data.DataColumn columnLongDescription;
            
            private global::System.Data.DataColumn columnDestinationTypeId;
            
            private global::System.Data.DataColumn columnClassificationId;
            
            private global::System.Data.DataColumn columnArrivalZoneData;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnTelephoneNo;
            
            private global::System.Data.DataColumn columnImage1Filename;
            
            private global::System.Data.DataColumn columnMasterAreaId;
            
            private global::System.Data.DataColumn columnThemeId;
            
            private global::System.Data.DataColumn columnVersionNo;
            
            private global::System.Data.DataColumn columnRecommendation;
            
            private global::System.Data.DataColumn columnCondition;
            
            private global::System.Data.DataColumn columnLocation;
            
            private global::System.Data.DataColumn columnDestinationTypeCode;
            
            private global::System.Data.DataColumn columnClassificationCode;
            
            private global::System.Data.DataColumn columnLatitude;
            
            private global::System.Data.DataColumn columnLongitude;
            
            private global::System.Data.DataColumn columnCellNo;
            
            private global::System.Data.DataColumn columnImage2Filename;
            
            private global::System.Data.DataColumn columnComment1;
            
            private global::System.Data.DataColumn columnComment2;
            
            private global::System.Data.DataColumn columnComment3;
            
            private global::System.Data.DataColumn columnComment4;
            
            private global::System.Data.DataColumn columnBooking;
            
            private global::System.Data.DataColumn columnLanguage;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnCollectionId;
            
            private global::System.Data.DataColumn columnIncludeInNearestSearch;
            
            private global::System.Data.DataColumn columnArrivalZoneType;
            
            private global::System.Data.DataColumn columnArrivalZoneMinLatitude;
            
            private global::System.Data.DataColumn columnArrivalZoneMaxLatitude;
            
            private global::System.Data.DataColumn columnArrivalZoneMinLongitude;
            
            private global::System.Data.DataColumn columnArrivalZoneMaxLongitude;
            
            private global::System.Data.DataColumn columnGridReferenceX;
            
            private global::System.Data.DataColumn columnGridReferenceY;
            
            private global::System.Data.DataColumn columnSearchKey;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DestinationDataTable() {
                this.TableName = "Destination";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DestinationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShortDescriptionColumn {
                get {
                    return this.columnShortDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LongDescriptionColumn {
                get {
                    return this.columnLongDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DestinationTypeIdColumn {
                get {
                    return this.columnDestinationTypeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassificationIdColumn {
                get {
                    return this.columnClassificationId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArrivalZoneDataColumn {
                get {
                    return this.columnArrivalZoneData;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TelephoneNoColumn {
                get {
                    return this.columnTelephoneNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Image1FilenameColumn {
                get {
                    return this.columnImage1Filename;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MasterAreaIdColumn {
                get {
                    return this.columnMasterAreaId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThemeIdColumn {
                get {
                    return this.columnThemeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VersionNoColumn {
                get {
                    return this.columnVersionNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecommendationColumn {
                get {
                    return this.columnRecommendation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConditionColumn {
                get {
                    return this.columnCondition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return this.columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DestinationTypeCodeColumn {
                get {
                    return this.columnDestinationTypeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassificationCodeColumn {
                get {
                    return this.columnClassificationCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LatitudeColumn {
                get {
                    return this.columnLatitude;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LongitudeColumn {
                get {
                    return this.columnLongitude;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CellNoColumn {
                get {
                    return this.columnCellNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Image2FilenameColumn {
                get {
                    return this.columnImage2Filename;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Comment1Column {
                get {
                    return this.columnComment1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Comment2Column {
                get {
                    return this.columnComment2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Comment3Column {
                get {
                    return this.columnComment3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Comment4Column {
                get {
                    return this.columnComment4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BookingColumn {
                get {
                    return this.columnBooking;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LanguageColumn {
                get {
                    return this.columnLanguage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CollectionIdColumn {
                get {
                    return this.columnCollectionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IncludeInNearestSearchColumn {
                get {
                    return this.columnIncludeInNearestSearch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArrivalZoneTypeColumn {
                get {
                    return this.columnArrivalZoneType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArrivalZoneMinLatitudeColumn {
                get {
                    return this.columnArrivalZoneMinLatitude;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArrivalZoneMaxLatitudeColumn {
                get {
                    return this.columnArrivalZoneMaxLatitude;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArrivalZoneMinLongitudeColumn {
                get {
                    return this.columnArrivalZoneMinLongitude;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArrivalZoneMaxLongitudeColumn {
                get {
                    return this.columnArrivalZoneMaxLongitude;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GridReferenceXColumn {
                get {
                    return this.columnGridReferenceX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GridReferenceYColumn {
                get {
                    return this.columnGridReferenceY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SearchKeyColumn {
                get {
                    return this.columnSearchKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DestinationRow this[int index] {
                get {
                    return ((DestinationRow)(this.Rows[index]));
                }
            }
            
            public event DestinationRowChangeEventHandler DestinationRowChanging;
            
            public event DestinationRowChangeEventHandler DestinationRowChanged;
            
            public event DestinationRowChangeEventHandler DestinationRowDeleting;
            
            public event DestinationRowChangeEventHandler DestinationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDestinationRow(DestinationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DestinationRow AddDestinationRow(
                        int Id, 
                        string Code, 
                        string ShortDescription, 
                        string LongDescription, 
                        int DestinationTypeId, 
                        int ClassificationId, 
                        string ArrivalZoneData, 
                        string Address, 
                        string TelephoneNo, 
                        string Image1Filename, 
                        int MasterAreaId, 
                        int ThemeId, 
                        int VersionNo, 
                        short Recommendation, 
                        string Condition, 
                        string Location, 
                        string DestinationTypeCode, 
                        string ClassificationCode, 
                        float Latitude, 
                        float Longitude, 
                        string CellNo, 
                        string Image2Filename, 
                        string Comment1, 
                        string Comment2, 
                        string Comment3, 
                        string Comment4, 
                        string Booking, 
                        string Language, 
                        string Comment, 
                        int CollectionId, 
                        bool IncludeInNearestSearch, 
                        string ArrivalZoneType, 
                        float ArrivalZoneMinLatitude, 
                        float ArrivalZoneMaxLatitude, 
                        float ArrivalZoneMinLongitude, 
                        float ArrivalZoneMaxLongitude, 
                        int GridReferenceX, 
                        int GridReferenceY, 
                        string SearchKey) {
                DestinationRow rowDestinationRow = ((DestinationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        Code,
                        ShortDescription,
                        LongDescription,
                        DestinationTypeId,
                        ClassificationId,
                        ArrivalZoneData,
                        Address,
                        TelephoneNo,
                        Image1Filename,
                        MasterAreaId,
                        ThemeId,
                        VersionNo,
                        Recommendation,
                        Condition,
                        Location,
                        DestinationTypeCode,
                        ClassificationCode,
                        Latitude,
                        Longitude,
                        CellNo,
                        Image2Filename,
                        Comment1,
                        Comment2,
                        Comment3,
                        Comment4,
                        Booking,
                        Language,
                        Comment,
                        CollectionId,
                        IncludeInNearestSearch,
                        ArrivalZoneType,
                        ArrivalZoneMinLatitude,
                        ArrivalZoneMaxLatitude,
                        ArrivalZoneMinLongitude,
                        ArrivalZoneMaxLongitude,
                        GridReferenceX,
                        GridReferenceY,
                        SearchKey};
                rowDestinationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDestinationRow);
                return rowDestinationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DestinationDataTable cln = ((DestinationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DestinationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnCode = base.Columns["Code"];
                this.columnShortDescription = base.Columns["ShortDescription"];
                this.columnLongDescription = base.Columns["LongDescription"];
                this.columnDestinationTypeId = base.Columns["DestinationTypeId"];
                this.columnClassificationId = base.Columns["ClassificationId"];
                this.columnArrivalZoneData = base.Columns["ArrivalZoneData"];
                this.columnAddress = base.Columns["Address"];
                this.columnTelephoneNo = base.Columns["TelephoneNo"];
                this.columnImage1Filename = base.Columns["Image1Filename"];
                this.columnMasterAreaId = base.Columns["MasterAreaId"];
                this.columnThemeId = base.Columns["ThemeId"];
                this.columnVersionNo = base.Columns["VersionNo"];
                this.columnRecommendation = base.Columns["Recommendation"];
                this.columnCondition = base.Columns["Condition"];
                this.columnLocation = base.Columns["Location"];
                this.columnDestinationTypeCode = base.Columns["DestinationTypeCode"];
                this.columnClassificationCode = base.Columns["ClassificationCode"];
                this.columnLatitude = base.Columns["Latitude"];
                this.columnLongitude = base.Columns["Longitude"];
                this.columnCellNo = base.Columns["CellNo"];
                this.columnImage2Filename = base.Columns["Image2Filename"];
                this.columnComment1 = base.Columns["Comment1"];
                this.columnComment2 = base.Columns["Comment2"];
                this.columnComment3 = base.Columns["Comment3"];
                this.columnComment4 = base.Columns["Comment4"];
                this.columnBooking = base.Columns["Booking"];
                this.columnLanguage = base.Columns["Language"];
                this.columnComment = base.Columns["Comment"];
                this.columnCollectionId = base.Columns["CollectionId"];
                this.columnIncludeInNearestSearch = base.Columns["IncludeInNearestSearch"];
                this.columnArrivalZoneType = base.Columns["ArrivalZoneType"];
                this.columnArrivalZoneMinLatitude = base.Columns["ArrivalZoneMinLatitude"];
                this.columnArrivalZoneMaxLatitude = base.Columns["ArrivalZoneMaxLatitude"];
                this.columnArrivalZoneMinLongitude = base.Columns["ArrivalZoneMinLongitude"];
                this.columnArrivalZoneMaxLongitude = base.Columns["ArrivalZoneMaxLongitude"];
                this.columnGridReferenceX = base.Columns["GridReferenceX"];
                this.columnGridReferenceY = base.Columns["GridReferenceY"];
                this.columnSearchKey = base.Columns["SearchKey"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnShortDescription = new global::System.Data.DataColumn("ShortDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShortDescription);
                this.columnLongDescription = new global::System.Data.DataColumn("LongDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLongDescription);
                this.columnDestinationTypeId = new global::System.Data.DataColumn("DestinationTypeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestinationTypeId);
                this.columnClassificationId = new global::System.Data.DataColumn("ClassificationId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassificationId);
                this.columnArrivalZoneData = new global::System.Data.DataColumn("ArrivalZoneData", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivalZoneData);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnTelephoneNo = new global::System.Data.DataColumn("TelephoneNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelephoneNo);
                this.columnImage1Filename = new global::System.Data.DataColumn("Image1Filename", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage1Filename);
                this.columnMasterAreaId = new global::System.Data.DataColumn("MasterAreaId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMasterAreaId);
                this.columnThemeId = new global::System.Data.DataColumn("ThemeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThemeId);
                this.columnVersionNo = new global::System.Data.DataColumn("VersionNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVersionNo);
                this.columnRecommendation = new global::System.Data.DataColumn("Recommendation", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecommendation);
                this.columnCondition = new global::System.Data.DataColumn("Condition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCondition);
                this.columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnDestinationTypeCode = new global::System.Data.DataColumn("DestinationTypeCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestinationTypeCode);
                this.columnClassificationCode = new global::System.Data.DataColumn("ClassificationCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassificationCode);
                this.columnLatitude = new global::System.Data.DataColumn("Latitude", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLatitude);
                this.columnLongitude = new global::System.Data.DataColumn("Longitude", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLongitude);
                this.columnCellNo = new global::System.Data.DataColumn("CellNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCellNo);
                this.columnImage2Filename = new global::System.Data.DataColumn("Image2Filename", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage2Filename);
                this.columnComment1 = new global::System.Data.DataColumn("Comment1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment1);
                this.columnComment2 = new global::System.Data.DataColumn("Comment2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment2);
                this.columnComment3 = new global::System.Data.DataColumn("Comment3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment3);
                this.columnComment4 = new global::System.Data.DataColumn("Comment4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment4);
                this.columnBooking = new global::System.Data.DataColumn("Booking", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBooking);
                this.columnLanguage = new global::System.Data.DataColumn("Language", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLanguage);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnCollectionId = new global::System.Data.DataColumn("CollectionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCollectionId);
                this.columnIncludeInNearestSearch = new global::System.Data.DataColumn("IncludeInNearestSearch", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncludeInNearestSearch);
                this.columnArrivalZoneType = new global::System.Data.DataColumn("ArrivalZoneType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivalZoneType);
                this.columnArrivalZoneMinLatitude = new global::System.Data.DataColumn("ArrivalZoneMinLatitude", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivalZoneMinLatitude);
                this.columnArrivalZoneMaxLatitude = new global::System.Data.DataColumn("ArrivalZoneMaxLatitude", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivalZoneMaxLatitude);
                this.columnArrivalZoneMinLongitude = new global::System.Data.DataColumn("ArrivalZoneMinLongitude", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivalZoneMinLongitude);
                this.columnArrivalZoneMaxLongitude = new global::System.Data.DataColumn("ArrivalZoneMaxLongitude", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivalZoneMaxLongitude);
                this.columnGridReferenceX = new global::System.Data.DataColumn("GridReferenceX", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGridReferenceX);
                this.columnGridReferenceY = new global::System.Data.DataColumn("GridReferenceY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGridReferenceY);
                this.columnSearchKey = new global::System.Data.DataColumn("SearchKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSearchKey);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DestinationRow NewDestinationRow() {
                return ((DestinationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DestinationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DestinationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DestinationRowChanged != null)) {
                    this.DestinationRowChanged(this, new DestinationRowChangeEvent(((DestinationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DestinationRowChanging != null)) {
                    this.DestinationRowChanging(this, new DestinationRowChangeEvent(((DestinationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DestinationRowDeleted != null)) {
                    this.DestinationRowDeleted(this, new DestinationRowChangeEvent(((DestinationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DestinationRowDeleting != null)) {
                    this.DestinationRowDeleting(this, new DestinationRowChangeEvent(((DestinationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDestinationRow(DestinationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DestinationDataset ds = new DestinationDataset();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DestinationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DestinationRow : global::System.Data.DataRow {
            
            private DestinationDataTable tableDestination;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DestinationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDestination = ((DestinationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id {
                get {
                    try {
                        return ((int)(this[this.tableDestination.IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Id\' in table \'Destination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestination.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Code {
                get {
                    if (this.IsCodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDestination.CodeColumn]));
                    }
                }
                set {
                    this[this.tableDestination.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShortDescription {
                get {
                    if (this.IsShortDescriptionNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDestination.ShortDescriptionColumn]));
                    }
                }
                set {
                    this[this.tableDestination.ShortDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LongDescription {
                get {
                    if (this.IsLongDescriptionNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDestination.LongDescriptionColumn]));
                    }
                }
                set {
                    this[this.tableDestination.LongDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DestinationTypeId {
                get {
                    try {
                        return ((int)(this[this.tableDestination.DestinationTypeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DestinationTypeId\' in table \'Destination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestination.DestinationTypeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ClassificationId {
                get {
                    try {
                        return ((int)(this[this.tableDestination.ClassificationIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassificationId\' in table \'Destination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestination.ClassificationIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ArrivalZoneData {
                get {
                    if (this.IsArrivalZoneDataNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDestination.ArrivalZoneDataColumn]));
                    }
                }
                set {
                    this[this.tableDestination.ArrivalZoneDataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    if (this.IsAddressNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDestination.AddressColumn]));
                    }
                }
                set {
                    this[this.tableDestination.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TelephoneNo {
                get {
                    if (this.IsTelephoneNoNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDestination.TelephoneNoColumn]));
                    }
                }
                set {
                    this[this.tableDestination.TelephoneNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Image1Filename {
                get {
                    if (this.IsImage1FilenameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDestination.Image1FilenameColumn]));
                    }
                }
                set {
                    this[this.tableDestination.Image1FilenameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MasterAreaId {
                get {
                    try {
                        return ((int)(this[this.tableDestination.MasterAreaIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MasterAreaId\' in table \'Destination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestination.MasterAreaIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ThemeId {
                get {
                    try {
                        return ((int)(this[this.tableDestination.ThemeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThemeId\' in table \'Destination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestination.ThemeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int VersionNo {
                get {
                    try {
                        return ((int)(this[this.tableDestination.VersionNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VersionNo\' in table \'Destination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestination.VersionNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Recommendation {
                get {
                    try {
                        return ((short)(this[this.tableDestination.RecommendationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Recommendation\' in table \'Destination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestination.RecommendationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Condition {
                get {
                    if (this.IsConditionNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDestination.ConditionColumn]));
                    }
                }
                set {
                    this[this.tableDestination.ConditionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location {
                get {
                    if (this.IsLocationNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDestination.LocationColumn]));
                    }
                }
                set {
                    this[this.tableDestination.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DestinationTypeCode {
                get {
                    if (this.IsDestinationTypeCodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDestination.DestinationTypeCodeColumn]));
                    }
                }
                set {
                    this[this.tableDestination.DestinationTypeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClassificationCode {
                get {
                    if (this.IsClassificationCodeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDestination.ClassificationCodeColumn]));
                    }
                }
                set {
                    this[this.tableDestination.ClassificationCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float Latitude {
                get {
                    try {
                        return ((float)(this[this.tableDestination.LatitudeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Latitude\' in table \'Destination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestination.LatitudeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float Longitude {
                get {
                    try {
                        return ((float)(this[this.tableDestination.LongitudeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Longitude\' in table \'Destination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestination.LongitudeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CellNo {
                get {
                    if (this.IsCellNoNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDestination.CellNoColumn]));
                    }
                }
                set {
                    this[this.tableDestination.CellNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Image2Filename {
                get {
                    if (this.IsImage2FilenameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDestination.Image2FilenameColumn]));
                    }
                }
                set {
                    this[this.tableDestination.Image2FilenameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment1 {
                get {
                    if (this.IsComment1Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDestination.Comment1Column]));
                    }
                }
                set {
                    this[this.tableDestination.Comment1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment2 {
                get {
                    if (this.IsComment2Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDestination.Comment2Column]));
                    }
                }
                set {
                    this[this.tableDestination.Comment2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment3 {
                get {
                    if (this.IsComment3Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDestination.Comment3Column]));
                    }
                }
                set {
                    this[this.tableDestination.Comment3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment4 {
                get {
                    if (this.IsComment4Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDestination.Comment4Column]));
                    }
                }
                set {
                    this[this.tableDestination.Comment4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Booking {
                get {
                    if (this.IsBookingNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDestination.BookingColumn]));
                    }
                }
                set {
                    this[this.tableDestination.BookingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Language {
                get {
                    if (this.IsLanguageNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDestination.LanguageColumn]));
                    }
                }
                set {
                    this[this.tableDestination.LanguageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    if (this.IsCommentNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDestination.CommentColumn]));
                    }
                }
                set {
                    this[this.tableDestination.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CollectionId {
                get {
                    try {
                        return ((int)(this[this.tableDestination.CollectionIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CollectionId\' in table \'Destination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestination.CollectionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IncludeInNearestSearch {
                get {
                    try {
                        return ((bool)(this[this.tableDestination.IncludeInNearestSearchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IncludeInNearestSearch\' in table \'Destination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestination.IncludeInNearestSearchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ArrivalZoneType {
                get {
                    if (this.IsArrivalZoneTypeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDestination.ArrivalZoneTypeColumn]));
                    }
                }
                set {
                    this[this.tableDestination.ArrivalZoneTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float ArrivalZoneMinLatitude {
                get {
                    try {
                        return ((float)(this[this.tableDestination.ArrivalZoneMinLatitudeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArrivalZoneMinLatitude\' in table \'Destination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestination.ArrivalZoneMinLatitudeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float ArrivalZoneMaxLatitude {
                get {
                    try {
                        return ((float)(this[this.tableDestination.ArrivalZoneMaxLatitudeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArrivalZoneMaxLatitude\' in table \'Destination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestination.ArrivalZoneMaxLatitudeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float ArrivalZoneMinLongitude {
                get {
                    try {
                        return ((float)(this[this.tableDestination.ArrivalZoneMinLongitudeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArrivalZoneMinLongitude\' in table \'Destination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestination.ArrivalZoneMinLongitudeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float ArrivalZoneMaxLongitude {
                get {
                    try {
                        return ((float)(this[this.tableDestination.ArrivalZoneMaxLongitudeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArrivalZoneMaxLongitude\' in table \'Destination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestination.ArrivalZoneMaxLongitudeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GridReferenceX {
                get {
                    try {
                        return ((int)(this[this.tableDestination.GridReferenceXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GridReferenceX\' in table \'Destination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestination.GridReferenceXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GridReferenceY {
                get {
                    try {
                        return ((int)(this[this.tableDestination.GridReferenceYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GridReferenceY\' in table \'Destination\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDestination.GridReferenceYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SearchKey {
                get {
                    if (this.IsSearchKeyNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableDestination.SearchKeyColumn]));
                    }
                }
                set {
                    this[this.tableDestination.SearchKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIdNull() {
                return this.IsNull(this.tableDestination.IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIdNull() {
                this[this.tableDestination.IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeNull() {
                return this.IsNull(this.tableDestination.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeNull() {
                this[this.tableDestination.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShortDescriptionNull() {
                return this.IsNull(this.tableDestination.ShortDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShortDescriptionNull() {
                this[this.tableDestination.ShortDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLongDescriptionNull() {
                return this.IsNull(this.tableDestination.LongDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLongDescriptionNull() {
                this[this.tableDestination.LongDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDestinationTypeIdNull() {
                return this.IsNull(this.tableDestination.DestinationTypeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDestinationTypeIdNull() {
                this[this.tableDestination.DestinationTypeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassificationIdNull() {
                return this.IsNull(this.tableDestination.ClassificationIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassificationIdNull() {
                this[this.tableDestination.ClassificationIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArrivalZoneDataNull() {
                return this.IsNull(this.tableDestination.ArrivalZoneDataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArrivalZoneDataNull() {
                this[this.tableDestination.ArrivalZoneDataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableDestination.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableDestination.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTelephoneNoNull() {
                return this.IsNull(this.tableDestination.TelephoneNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTelephoneNoNull() {
                this[this.tableDestination.TelephoneNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImage1FilenameNull() {
                return this.IsNull(this.tableDestination.Image1FilenameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImage1FilenameNull() {
                this[this.tableDestination.Image1FilenameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMasterAreaIdNull() {
                return this.IsNull(this.tableDestination.MasterAreaIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMasterAreaIdNull() {
                this[this.tableDestination.MasterAreaIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThemeIdNull() {
                return this.IsNull(this.tableDestination.ThemeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThemeIdNull() {
                this[this.tableDestination.ThemeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVersionNoNull() {
                return this.IsNull(this.tableDestination.VersionNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVersionNoNull() {
                this[this.tableDestination.VersionNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecommendationNull() {
                return this.IsNull(this.tableDestination.RecommendationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecommendationNull() {
                this[this.tableDestination.RecommendationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConditionNull() {
                return this.IsNull(this.tableDestination.ConditionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConditionNull() {
                this[this.tableDestination.ConditionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNull() {
                return this.IsNull(this.tableDestination.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNull() {
                this[this.tableDestination.LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDestinationTypeCodeNull() {
                return this.IsNull(this.tableDestination.DestinationTypeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDestinationTypeCodeNull() {
                this[this.tableDestination.DestinationTypeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassificationCodeNull() {
                return this.IsNull(this.tableDestination.ClassificationCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassificationCodeNull() {
                this[this.tableDestination.ClassificationCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLatitudeNull() {
                return this.IsNull(this.tableDestination.LatitudeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLatitudeNull() {
                this[this.tableDestination.LatitudeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLongitudeNull() {
                return this.IsNull(this.tableDestination.LongitudeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLongitudeNull() {
                this[this.tableDestination.LongitudeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCellNoNull() {
                return this.IsNull(this.tableDestination.CellNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCellNoNull() {
                this[this.tableDestination.CellNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImage2FilenameNull() {
                return this.IsNull(this.tableDestination.Image2FilenameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImage2FilenameNull() {
                this[this.tableDestination.Image2FilenameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComment1Null() {
                return this.IsNull(this.tableDestination.Comment1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComment1Null() {
                this[this.tableDestination.Comment1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComment2Null() {
                return this.IsNull(this.tableDestination.Comment2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComment2Null() {
                this[this.tableDestination.Comment2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComment3Null() {
                return this.IsNull(this.tableDestination.Comment3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComment3Null() {
                this[this.tableDestination.Comment3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComment4Null() {
                return this.IsNull(this.tableDestination.Comment4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComment4Null() {
                this[this.tableDestination.Comment4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBookingNull() {
                return this.IsNull(this.tableDestination.BookingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBookingNull() {
                this[this.tableDestination.BookingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLanguageNull() {
                return this.IsNull(this.tableDestination.LanguageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLanguageNull() {
                this[this.tableDestination.LanguageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableDestination.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableDestination.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCollectionIdNull() {
                return this.IsNull(this.tableDestination.CollectionIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCollectionIdNull() {
                this[this.tableDestination.CollectionIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIncludeInNearestSearchNull() {
                return this.IsNull(this.tableDestination.IncludeInNearestSearchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIncludeInNearestSearchNull() {
                this[this.tableDestination.IncludeInNearestSearchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArrivalZoneTypeNull() {
                return this.IsNull(this.tableDestination.ArrivalZoneTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArrivalZoneTypeNull() {
                this[this.tableDestination.ArrivalZoneTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArrivalZoneMinLatitudeNull() {
                return this.IsNull(this.tableDestination.ArrivalZoneMinLatitudeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArrivalZoneMinLatitudeNull() {
                this[this.tableDestination.ArrivalZoneMinLatitudeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArrivalZoneMaxLatitudeNull() {
                return this.IsNull(this.tableDestination.ArrivalZoneMaxLatitudeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArrivalZoneMaxLatitudeNull() {
                this[this.tableDestination.ArrivalZoneMaxLatitudeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArrivalZoneMinLongitudeNull() {
                return this.IsNull(this.tableDestination.ArrivalZoneMinLongitudeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArrivalZoneMinLongitudeNull() {
                this[this.tableDestination.ArrivalZoneMinLongitudeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArrivalZoneMaxLongitudeNull() {
                return this.IsNull(this.tableDestination.ArrivalZoneMaxLongitudeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArrivalZoneMaxLongitudeNull() {
                this[this.tableDestination.ArrivalZoneMaxLongitudeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGridReferenceXNull() {
                return this.IsNull(this.tableDestination.GridReferenceXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGridReferenceXNull() {
                this[this.tableDestination.GridReferenceXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGridReferenceYNull() {
                return this.IsNull(this.tableDestination.GridReferenceYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGridReferenceYNull() {
                this[this.tableDestination.GridReferenceYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSearchKeyNull() {
                return this.IsNull(this.tableDestination.SearchKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSearchKeyNull() {
                this[this.tableDestination.SearchKeyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        public class DestinationRowChangeEvent : global::System.EventArgs {
            
            private DestinationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DestinationRowChangeEvent(DestinationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DestinationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace DestinationDatasetUtil {
    using System;
    using System.Data;
    
    
    public partial class DesignerUtil {
        
        public static bool IsDesignTime() {
            // Determine if this instance is running against .NET Framework by using the MSCoreLib PublicKeyToken
            System.Reflection.Assembly mscorlibAssembly = typeof(int).Assembly;
            if ((mscorlibAssembly != null)) {
                if (mscorlibAssembly.FullName.ToUpper().EndsWith("B77A5C561934E089")) {
                    return true;
                }
            }
            return false;
        }
        
        public static bool IsRunTime() {
            // Determine if this instance is running against .NET Compact Framework by using the MSCoreLib PublicKeyToken
            System.Reflection.Assembly mscorlibAssembly = typeof(int).Assembly;
            if ((mscorlibAssembly != null)) {
                if (mscorlibAssembly.FullName.ToUpper().EndsWith("969DB8053D3322AC")) {
                    return true;
                }
            }
            return false;
        }
    }
}
